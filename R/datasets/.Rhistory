punidirect2
n_11 = 22
m = 120
k = 39
n = 113
punidirect2 = phyper(n_11-1,m,n,k,lower.tail = FALSE)
punidirect2
pval2 = phyper(seq(max(0,k-n),min(k,m),1),m,n,k,lower.tail=FALSE)
puni2 = pval2[n_11]
puni2
n_11 = 12
m = 15
k = 15
n = 17
punidirect1 = phyper(n_11-1,m,n,k,lower.tail = FALSE)
punidirect1
pval1 = phyper(seq(max(0,k-n),min(k,m),1),m,n,k,lower.tail=FALSE)
puni1 = pval1[n_11]
puni1
n_11 = 22
m = 120
k = 39
n = 113
punidirect2 = phyper(n_11-1,m,n,k,lower.tail = FALSE)
punidirect2
pval2 = phyper(seq(max(0,k-n),min(k,m),1),m,n,k,lower.tail=FALSE)
puni2 = pval2[n_11]
puni2
pbil1 = dhyper(seq(max(0,k-n_11),min(k,m),m,n,k))
pbil1 = dhyper(seq(max(0,k-n_11),min(k,m)),m,n,k)
indice = which(p<=p[n_11+1])
p = dhyper(seq(max(0,k-n_11),min(k,m)),m,n,k)
indice = which(p<=p[n_11+1])
pbil1 = p[indice]
pbil1
n_11 = 12
m = 15
k = 15
n = 17
puni1 = phyper(n_11-1,m,n,k,lower.tail = FALSE) # p value unilatérale
puni1
p = dhyper(seq(max(0,k-n_11),min(k,m)),m,n,k)
indice = which(p<=p[n_11+1])
pbil1 = p[indice]
pbil1
midp1 =
midp1
p = dhyper(seq(max(0,k-n_11),min(k,m)),m,n_11,k)
indice = which(p<=p[n_11+1])
pbil1 = p[indice]
pbil1
n_11 = 12
m = 15
k = 15
n = 17
puni1 = phyper(n_11-1,m,n,k,lower.tail = FALSE) # p value unilatérale
puni1
p = dhyper(seq(max(0,k-n_11),min(k,m)),m,n_11,k)
indice = which(p<=p[n_11+1])
pbil1 = p[indice]
pbil1
n_11 = 22
m = 120
k = 39
n = 113
pval2 = phyper(seq(max(0,k-n),min(k,m),1),m,n_11,k,lower.tail=FALSE)
puni2 = pval2[n_11]
puni2
pval2 = phyper(seq(max(0,k-n_11),min(k,m),1),m,n_11,k,lower.tail=FALSE)
puni2 = pval2[n_11]
puni2
n_11 = 22
m = 120
k = 39
n = 113
pval2 = phyper(seq(max(0,k-n_11),min(k,m),1),m,n_11,k,lower.tail=FALSE)
puni2 = pval2[n_11]
puni2
puni1 = phyper(n_11-1,m,n,k,lower.tail = FALSE) # p value unilatérale
puni1
b = dhyper(seq(max(0,k-n_11),min(k,m)),m,n_11,k)
indice = which(b<=b[n_11+1])
pbil1 = b[indice]
pbil1
midp1 =
midp1
n_11 = 22
n_11 = 12
m = 15
k = 15
n = 17
puni1 = phyper(n_11-1,m,n,k,lower.tail = FALSE) # p value unilatérale
puni1
b = dhyper(seq(max(0,k-n_11),min(k,m)),m,n_11,k)
indice = which(b<=b[n_11+1])
pbil1 = b[indice]
pbil1
indice_large = which(b<=b[n_11+1])
p = b[indice]
n_11 = 12
m = 15
k = 15
n = 17
puni1 = phyper(n_11-1,m,n,k,lower.tail = FALSE) # p value unilatérale
puni1
b = dhyper(seq(max(0,k-n_11),min(k,m)),m,n_11,k)
indice_large = which(b<=b[n_11+1])
p = b[indice_large]
pbil1=sum(p)
pbil1
midp1 = sum(m)+0.5*b[obs+1]
n_11 = 12
m = 15
k = 15
n = 17
puni1 = phyper(n_11-1,m,n,k,lower.tail = FALSE) # p value unilatérale
puni1
b = dhyper(seq(max(0,k-n_11),min(k,m)),m,n_11,k)
indice_large = which(b<=b[n_11+1])
p = b[indice_large]
pbil1=sum(p)
pbil1
indice_stricte = which(b<b[n_11+1])
m = b[indice_stricte]
midp1 = sum(m)+0.5*b[n_11+1]
midp1
b = dhyper(seq(max(0,k-n),min(k,m)),m,n_11,k)
indice_large = which(b<=b[n_11+1])
p = b[indice_large]
pbil1=sum(p)
pbil1
indice_stricte = which(b<b[n_11+1])
m = b[indice_stricte]
midp1 = sum(m)+0.5*b[n_11+1]
midp1
b = dhyper(seq(max(0,k-n),min(k,m)),m,n,k)
indice_large = which(b<=b[n_11+1])
p = b[indice_large]
pbil1=sum(p)
pbil1
b = dhyper(seq(max(0,k-n),min(k,m),1),m,n,k)
indice_large = which(b<=b[n_11+1])
p = b[indice_large]
pbil1=sum(p)
pbil1
b = dhyper(seq(max(0,k-n),min(k,m),1),m,n,k)
indice_large = which(b<=b[n_11+1])
p = b[indice_large]
pbil1=sum(p)
pbil1
tableau = matrix(c(12,3,3,14),nrow=2, ncol=2)
fisher.test(tableau)
fisher.test(tableau,alternative = "greater")
fisher.test(tableau,alternative = "less")
fisher.test(tableau,alternative = "two.sided")
tableau = matrix(c(22,98,17,96),nrow=2, ncol=2)
tableau
fisher.test(tableau)
fisher.test(tableau,alternative = "greater")
fisher.test(tableau,alternative = "less") # c'est less pour la pbil
fisher.test(tableau,alternative = "two.sided")
tableau = matrix(c(12,3,3,14),nrow=2, ncol=2)
tableau
fisher.test(tableau)
fisher.test(tableau,alternative = "greater") # c'est la p-val unilatérale
fisher.test(tableau,alternative = "less") # c'est la p-value bilatérale
fisher.test(tableau,alternative = "two.sided")
tableau = matrix(c(12,3,3,14),nrow=2, ncol=2)
tableau
fisher.test(tableau)
fisher.test(tableau,alternative = "greater") # c'est la p-val unilatérale
fisher.test(tableau,alternative = "less") # c'est la p-value bilatérale
fisher.test(tableau,alternative = "two.sided")
fisher.test(tableau,alternative = "greater") # c'est la p-val unilatérale
fisher.test(tableau,alternative = "less")
fisher.test(tableau,alternative = "two.sided") # c'est la p-value bilatérale
tableau = matrix(c(12,3,3,14),nrow=2, ncol=2)
tableau
fisher.test(tableau)
fisher.test(tableau,alternative = "greater") # c'est la p-val unilatérale
fisher.test(tableau,alternative = "less")
fisher.test(tableau,alternative = "two.sided") # c'est la p-value bilatérale
tableau1 = matrix(c(12,3,3,14),nrow=2, ncol=2)
tableau1
fisher.test(tableau1)
fisher.test(tableau1,alternative = "greater") # c'est la p-val unilatérale
fisher.test(tableau1,alternative = "less")
fisher.test(tableau1,alternative = "two.sided") # c'est la p-value bilatérale
tableau2 = matrix(c(22,98,17,96),nrow=2, ncol=2)
tableau2
fisher.test(tableau2)
fisher.test(tableau2,alternative = "greater") # c'est la p-val unilatérale
fisher.test(tableau2,alternative = "less")
fisher.test(tableau2,alternative = "two.sided") # c'est la p-value bilatérale
fisher.test(tableau2)
fisher.test(tableau2,alternative = "greater") # c'est la p-val unilatérale
fisher.test(tableau2,alternative = "less")
fisher.test(tableau2,alternative = "two.sided") # c'est la p-value bilatérale
fisher.test(tableau1)
fisher.test(tableau1,alternative = "greater") # c'est la p-val unilatérale
fisher.test(tableau1,alternative = "less")
fisher.test(tableau1,alternative = "two.sided") # c'est la p-value bilatérale
View(tableau2)
# tableau 1
chi2 = chisq.test(tableau1, correct = FALSE)
chi2$expected
chi2
chi1_yates = chisq.test(tableau1, correct = TRUE)
chi1_yates$expected
chi1_yates
chi2 = chisq.test(tableau2, correct = FALSE)
chi2$expected
chi2
chi2_yates = chisq.test(tableau2, correct = TRUE)
chi2_yates$expected
# tableau 1
chi1 = chisq.test(tableau1, correct = FALSE)
chi1$expected
chi1
chi1_yates = chisq.test(tableau1, correct = TRUE)
chi1_yates$expected
chi1_yates
fisher.test(tableau1,alternative = "less")
n_11 = 12
m = 15
k = 15
n = 17
puni1 = phyper(n_11-1,m,n,k,lower.tail = FALSE) # p value unilatérale
puni1
n_11 = 12
m = 15
k = 15
n = 17
puni1 = phyper(n_11-1,m,n,k,lower.tail = FALSE) # p value unilatérale
puni1
b = dhyper(seq(max(0,k-n),min(k,m),1),m,n,k)
indice_large = which(b<=b[n_11+1])
p = b[indice_large]
pbil1=sum(p)
pbil1
n_11 = 12
m = 15
k = 15
n = 17
puni1 = phyper(n_11-1,m,n,k,lower.tail = FALSE) # p value unilatérale
puni1
b = dhyper(seq(max(0,k-n),min(k,m),1),m,n,k) # valeurs de P(X=k)
indice_large = which(b<=b[n_11+1])
p = b[indice_large] # valeurs de P(X>=k)
pbil1=sum(p) # p-value bilatérale
b = dhyper(seq(max(0,k-n),min(k,m),1),m,n,k) # valeurs de P(X=k)
indice_large = which(b<=b[n_11+1])
p = b[indice_large] # valeurs de P(X>=k)
pbil1=sum(p) # p-value bilatérale
pbil1
indice_stricte = which(b<b[n_11+1])
m = b[indice_stricte] # valeurs de P(X>k)
midp1 = sum(m)+0.5*b[n_11+1] # mid p-value
midp1
tableau1 = matrix(c(12,3,3,14),nrow=2, ncol=2)
tableau1
fisher.test(tableau1) # p-value bilatérale
fisher.test(tableau1,alternative = "greater") # c'est la p-val unilatérale
fisher.test(tableau1,alternative = "less")
fisher.test(tableau1,alternative = "two.sided") # c'est la p-value bilatérale
n_11 = 22
m = 120
k = 39
n = 113
pval2 = phyper(seq(max(0,k-n_11),min(k,m),1),m,n_11,k,lower.tail=FALSE)
puni2 = pval2[n_11]
puni2
tableau2 = matrix(c(22,98,17,96),nrow=2, ncol=2)
tableau2
n_11 = 22
m = 120
k = 39
n = 113
puni2 = phyper(n_11-1,m,n,k,lower.tail = FALSE) # p value unilatérale
puni2
pval2 = phyper(seq(max(0,k-n_11),min(k,m),1),m,n_11,k,lower.tail=FALSE)
puni2 = pval2[n_11]
puni2
n_11 = 22
m = 120
k = 39
n = 113
puni2 = phyper(n_11-1,m,n,k,lower.tail = FALSE) # p value unilatérale
puni2
b = dhyper(seq(max(0,k-n),min(k,m),1),m,n,k) # valeurs de P(X=k)
indice_large = which(b<=b[n_11+1])
p = b[indice_large] # valeurs de P(X>=k)
pbil1=sum(p) # p-value bilatérale
pbil1
indice_stricte = which(b<b[n_11+1])
m = b[indice_stricte] # valeurs de P(X>k)
midp1 = sum(m)+0.5*b[n_11+1] # mid p-value
midp1
puni2 = phyper(n_11-1,m,n,k,lower.tail = FALSE) # p value unilatérale
puni2
n_11 = 22
m = 120
k = 39
n = 113
puni2 = phyper(n_11-1,m,n,k,lower.tail = FALSE) # p value unilatérale
puni2
b = dhyper(seq(max(0,k-n),min(k,m),1),m,n,k) # valeurs de P(X=k)
indice_large = which(b<=b[n_11+1])
p = b[indice_large] # valeurs de P(X>=k)
pbil1=sum(p) # p-value bilatérale
pbil1
indice_stricte = which(b<b[n_11+1])
m = b[indice_stricte] # valeurs de P(X>k)
midp1 = sum(m)+0.5*b[n_11+1] # mid p-value
midp1
n_11 = 22
m = 120
k = 39
n = 113
puni2 = phyper(n_11-1,m,n,k,lower.tail = FALSE) # p value unilatérale
puni2
b = dhyper(seq(max(0,k-n),min(k,m),1),m,n,k) # valeurs de P(X=k)
indice_large = which(b<=b[n_11+1])
p = b[indice_large] # valeurs de P(X>=k)
pbil1=sum(p) # p-value bilatérale
pbil1
indice_stricte = which(b<b[n_11+1])
m = b[indice_stricte] # valeurs de P(X>k)
midp1 = sum(m)+0.5*b[n_11+1] # mid p-value
midp1
puni2
pbil1
midp1
n_11 = 22
m = 120
k = 39
n = 113
puni2 = phyper(n_11-1,m,n,k,lower.tail = FALSE) # p value unilatérale
puni2
b = dhyper(seq(max(0,k-n),min(k,m),1),m,n,k) # valeurs de P(X=k)
indice_large = which(b<=b[n_11+1])
p = b[indice_large] # valeurs de P(X>=k)
pbil2=sum(p) # p-value bilatérale
pbil2
indice_stricte = which(b<b[n_11+1])
m = b[indice_stricte] # valeurs de P(X>k)
midp2 = sum(m)+0.5*b[n_11+1] # mid p-value
midp2
puni2
pbil2
midp2
tableau1 = matrix(c(12,3,3,14),nrow=2, ncol=2)
tableau1
tableau2 = matrix(c(22,98,17,96),nrow=2, ncol=2)
tableau2
# tableau 1
chi1 = chisq.test(tableau1, correct = FALSE)
chi1$expected
chi1
chi1_yates = chisq.test(tableau1, correct = TRUE)
chi1_yates$expected
chi1_yates
chi2 = chisq.test(tableau2, correct = FALSE)
chi2$expected
chi2
chi2_yates = chisq.test(tableau2, correct = TRUE)
chi2_yates$expected
chi2_yates
View(tableau1)
View(tableau2)
# tableau 1
chi1 = chisq.test(tableau1, correct = FALSE)
chi1$expected
chi1
chi1_yates = chisq.test(tableau1, correct = TRUE)
chi1_yates$expected
chi1_yates
chi2 = chisq.test(tableau2, correct = FALSE)
chi2$expected
chi2
chi2_yates = chisq.test(tableau2, correct = TRUE)
chi2_yates$expected
chi2_yates
chi1_yates = chisq.test(tableau1, correct = TRUE)
chi1_yates$expected
chi1_yates
chi1
chi1_yates
chi2
chi2_yates
5+5
5+5
5//2
5%%2
5%2
5/2
1/0
F
T
install.packages("install.packages("languageserver")")
install.packages("languageserver")
library(languageserver)
r.home()
R.home-)
R.home())
file.path(r.home("bin"),"R")
R.home("bin")
install.packages("tidyverse")
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
matrix1 <- matrix(1:12, ncol=5)
matrix1 <- matrix(1:12, ncol=4)
matrix1
matrix2 <- matrix(c(1,5,4,8,2,3,6,1:5))
matrix2
matrix2 <- matrix(c(1,5,4,8,2,3,6,1:5), ncol=4)
matrix2
matrix2 %*% matrix 1
matrix2 %*% matrix1
matrix1*matrix2
matrix1
matrix2
matrix1 %*% matrix2
matrix2 <- matrix(c(1,5,4,8,2,3,6,1:5), ncol=3)
matrix1 %*% matrix2
matrix1 * matrix2
modde
mode
ls()
mode(ls)
rem(list= ls(=))
rem(list= ls())
rem(ls()
)
rm(ls())
rm(list = ls())
mode(ls()x = )
mode(ls())
args(matrix)
fonction(formula =, data=)
iris
a <- c(scan())
a
args(data.frame)
getwd()
setwd(..\VSC\R)
setwd(.\VSC\R)
setwd(.\VSC\R)
setwd(C:\Users\Papa ours\Downloads\VSC\R\datasets)
setwd("C:\Users\Papa ours\Downloads\VSC\R\datasets")
setwd("C:\\Users\\Papa ours\\Downloads\\VSC\\R\\datasets")
getwd()
rem(list=ls())
rm(list=ls())
args(save)
args(paste)
table1 <- table1.tqt
table1 <- table1.txt
getwd()
table1 <- read.table(table1.txt)
table1 <- read.table("table1.txt"")
table1
""
table1 <- read.table("table1.txt")
table1
notes.Guillaume<-c(Anglais=c(12,20,1),Informatique=19.5,Biologie=14)
notes.guillaume
notes.Guillaume
table1 <- read.table("table1.txt")
table1
(table1 <- read.table("table1.txt"))
(table1 <- read.table("table1.txt", header=T))
?sheetName
args(read.xlsx)
library(xlsx)
install.packages("xlsx")
install.packages("xlsx")
library(xlsx)
args(xlsx)
args(read.xlsx)
v = c(101:112)
v
w <- rep(c(4,6,3),4)
w
x <- c(rep(4,8), rep(6,7), rep(3,5)
x
x <- c(rep(4,8), rep(6,7), rep(3,5))
x
masse <- c(scan())
28
30,5
30
31
29,5
30
31
31
31
5
32
30
30
masse
masse <- c(scan())
masse1 <- c(40,39,41,37.5,43)
nouvelle.masse <- c(rep(mass1,2), tail(masse, 10))
nouvelle.masse <- c(rep(masse1,2), tail(masse, 10))
nouvelle.masse
lasse
masse
